package com.example.b2bemitter;

import java.io.BufferedWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import com.example.androidsocketclient.R;
 
import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;
 
public class Client extends Activity {
 
	TextView tv;
	private Socket socket;
 
    private static final int SERVERPORT = 6000;
    private static final String SERVER_IP = "10.144.143.60";
 
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_client);
        
        tv = (TextView)findViewById(R.id.textView1);
 
        new Thread(new ClientThread()).start();
    }
 
    public void onClick(View view) {
        try {
                    	
        	PrintWriter out = new PrintWriter(new BufferedWriter(
                    new OutputStreamWriter(socket.getOutputStream())),
                    true);
            
            
        	for (int i = 0; i < 1000; i++) {
        	//while (true) {
            	Random random = new Random();
            	int numb = (random.nextBoolean()) ? 1: 0;
                        
            	tv.append(" " + numb + "\n");
            	out.println(numb);
            	
            	Thread.sleep(1000);            	
            }
        	        	
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
 
    class ClientThread implements Runnable {
 
        @Override
        public void run() {
 
            try {
                InetAddress serverAddr = InetAddress.getByName(SERVER_IP);
 
                socket = new Socket(serverAddr, SERVERPORT);
                 
            } catch (UnknownHostException e1) {
                e1.printStackTrace();
            } catch (IOException e1) {
                e1.printStackTrace();
            } catch (Exception e) {
                e.printStackTrace();
            }
            
            
 
        }
       
 
    }
}

